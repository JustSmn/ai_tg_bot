package bot

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"main.go/internal/config"
	"main.go/internal/huggingface"
	"main.go/pkg/logger"
)

const (
	helpText = `–ü—Ä–∏–≤–µ—Çüêô, —è –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —Ç–≤–æ–µ–º—É —Ç–µ–∫—Å—Ç—É!üçÑüçÑüçÑ
–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.üî•
–ï—Å—Ç—å –æ–¥–Ω–æ –Ω–æ - –ø–∏—à–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µüçîü¶ÖüóΩüíµü•Ä
(–ú–æ–π AI –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–¥–Ω—ã–π, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞üò≠ü§ßüòøü§íü§ï –ù–æ –Ω–µ –≥—Ä—É—Å—Ç–∏, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –∑–∞–ø—Ä–æ—Å, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –Ω–∏–ºü•∫üòöüòãüòáü•∞)`
	infoText = `–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Hugging Face API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é.
–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –º–æ–¥–µ–ª—å: stabilityai/stable-diffusion-2-1.
–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏: @Just_Semen228
JustSMN 2025 v.1.0.0`
)

func Start(cfg *config.Config) error {
	bot, err := tgbotapi.NewBotAPI(cfg.TelegramToken)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: %v", err)
	}

	bot.Debug = true
	logger.Infof("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil {
			continue
		}

		switch update.Message.Command() {
		case "start", "help":
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, helpText)
			bot.Send(msg)
			continue
		case "info":
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, infoText)
			bot.Send(msg)
			continue
		}

		description := update.Message.Text

		msg := tgbotapi.NewMessage(update.Message.Chat.ID, "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
		statusMsg, _ := bot.Send(msg)

		// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é Hugging Face API
		imageBytes, err := huggingface.GenerateImageWithRetries(bot, update.Message.Chat.ID, statusMsg.MessageID, description, cfg)
		if err != nil {
			logger.Errorf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: %v", err)

			deleteMsg := tgbotapi.NewDeleteMessage(update.Message.Chat.ID, statusMsg.MessageID)
			bot.Send(deleteMsg)

			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—èüòûüòûüòû –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ ü•∫ ü•∫ ü•∫")
			bot.Send(msg)
			continue
		}

		deleteMsg := tgbotapi.NewDeleteMessage(update.Message.Chat.ID, statusMsg.MessageID)
		bot.Send(deleteMsg)

		file := tgbotapi.FileBytes{Name: "image.png", Bytes: imageBytes}
		photo := tgbotapi.NewPhoto(update.Message.Chat.ID, file)
		_, err = bot.Send(photo)
		if err != nil {
			logger.Errorf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: %v", err)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
			bot.Send(msg)
		}
	}

	return nil
}
